/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
.prefix(@property, @value, @vendors) {
    .iter(length(@vendors));

    .iter(@i) when (@i > 0) {
        .iter(@i - 1);
        @vendor: extract(@vendors, @i);
        -@{vendor}-@{property}: @value;
    }
    @{property}: @value;
}

.transition-all() {
    -webkit-transition: all 0.35s;
    -moz-transition: all 0.35s;
    transition: all 0.35s;
}

.sans-serif-font() {
	font-family: 'Open Sans', 'Helvetica Neue', Arial, sans-serif;
}

.button-variant(@color; @background; @border) {
	color: @color;
	background-color: @background;
	border-color: @border;
	.transition-all;

	&:hover,
	&:focus,
	&.focus,
	&:active,
	&.active,
	.open > .dropdown-toggle& {
		color: @color;
		background-color: darken(@background, 5%);
	    border-color: darken(@border, 7%);
	}
	&:active,
	&.active,
	.open > .dropdown-toggle& {
		background-image: none;
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&.focus,
		&:active,
		&.active {
			background-color: @background;
			border-color: @border;
		}
	}

	.badge {
		color: @background;
		background-color: @color;
	}
}

.set-theme-color(@color) {
  h3,
  .fa {
    color: @color;
  }

  hr {
    border-color: @color;
  }

  .form-control {
    &:focus {
      border-color: @color;
    }
  }

  .btn-primary {
      .button-variant(white; @color; @color);
  }
}
